/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.drewhamlett.jsbeautify.ui;

import com.drewhamlett.jsbeautify.JSBeautifyOptions;
import org.openide.util.NbPreferences;

final class JSBeautifyPanel extends javax.swing.JPanel {

    private final JSBeautifyOptionsPanelController controller;

    JSBeautifyPanel(JSBeautifyOptionsPanelController controller) {
        this.controller = controller;
        initComponents();
        // TODO listen to changes in form fields and call controller.changed()
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this
     * code. The content of this method is always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        useTabs = new javax.swing.JCheckBox();
        preserveNewLines = new javax.swing.JCheckBox();
        spaceBeforeConditional = new javax.swing.JCheckBox();
        braceStyle = new javax.swing.JComboBox();
        braceStyleLabel = new javax.swing.JLabel();
        indentCase = new javax.swing.JCheckBox();
        jslintHappy = new javax.swing.JCheckBox();
        indentSize = new javax.swing.JComboBox();
        indentSizeLabel = new javax.swing.JLabel();
        initialIndentLevel = new javax.swing.JComboBox();
        initialIndentLevelLabel = new javax.swing.JLabel();
        usePaddingSpaces = new javax.swing.JCheckBox();
        useSpaceInEmptyParen = new javax.swing.JCheckBox();
        useSpaceBeforeAnon = new javax.swing.JCheckBox();
        breakChainedMethods = new javax.swing.JCheckBox();
        keepArrayIndent = new javax.swing.JCheckBox();
        wrapLineLength = new javax.swing.JComboBox();
        helpLabel = new javax.swing.JLabel();
        linkToJsBeautify = new javax.swing.JLabel();
        labelWrapLineLength = new javax.swing.JLabel();

        org.openide.awt.Mnemonics.setLocalizedText(useTabs, org.openide.util.NbBundle.getMessage(JSBeautifyPanel.class, "JSBeautifyPanel.useTabs.text")); // NOI18N
        useTabs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                useTabsActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(preserveNewLines, org.openide.util.NbBundle.getMessage(JSBeautifyPanel.class, "JSBeautifyPanel.preserveNewLines.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(spaceBeforeConditional, org.openide.util.NbBundle.getMessage(JSBeautifyPanel.class, "JSBeautifyPanel.spaceBeforeConditional.text")); // NOI18N
        spaceBeforeConditional.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                spaceBeforeConditionalActionPerformed(evt);
            }
        });

        braceStyle.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "collapse", "expand" }));
        braceStyle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                braceStyleActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(braceStyleLabel, org.openide.util.NbBundle.getMessage(JSBeautifyPanel.class, "JSBeautifyPanel.braceStyleLabel.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(indentCase, org.openide.util.NbBundle.getMessage(JSBeautifyPanel.class, "JSBeautifyPanel.indentCase.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jslintHappy, org.openide.util.NbBundle.getMessage(JSBeautifyPanel.class, "JSBeautifyPanel.jslintHappy.text")); // NOI18N
        jslintHappy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jslintHappyActionPerformed(evt);
            }
        });

        indentSize.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "2", "3", "4", "8" }));

        org.openide.awt.Mnemonics.setLocalizedText(indentSizeLabel, org.openide.util.NbBundle.getMessage(JSBeautifyPanel.class, "JSBeautifyPanel.indentSizeLabel.text")); // NOI18N

        initialIndentLevel.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "0", "1", "2" }));

        initialIndentLevelLabel.setLabelFor(initialIndentLevel);
        org.openide.awt.Mnemonics.setLocalizedText(initialIndentLevelLabel, org.openide.util.NbBundle.getMessage(JSBeautifyPanel.class, "JSBeautifyPanel.initialIndentLevelLabel.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(usePaddingSpaces, org.openide.util.NbBundle.getMessage(JSBeautifyPanel.class, "JSBeautifyPanel.usePaddingSpaces.text")); // NOI18N
        usePaddingSpaces.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usePaddingSpacesActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(useSpaceInEmptyParen, org.openide.util.NbBundle.getMessage(JSBeautifyPanel.class, "JSBeautifyPanel.useSpaceInEmptyParen.text")); // NOI18N
        useSpaceInEmptyParen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                useSpaceInEmptyParenActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(useSpaceBeforeAnon, org.openide.util.NbBundle.getMessage(JSBeautifyPanel.class, "JSBeautifyPanel.useSpaceBeforeAnon.text")); // NOI18N
        useSpaceBeforeAnon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                useSpaceBeforeAnonActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(breakChainedMethods, org.openide.util.NbBundle.getMessage(JSBeautifyPanel.class, "JSBeautifyPanel.breakChainedMethods.text")); // NOI18N
        breakChainedMethods.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                breakChainedMethodsActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(keepArrayIndent, org.openide.util.NbBundle.getMessage(JSBeautifyPanel.class, "JSBeautifyPanel.keepArrayIndent.text")); // NOI18N
        keepArrayIndent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                keepArrayIndentActionPerformed(evt);
            }
        });

        wrapLineLength.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "0", "1", "2" }));

        helpLabel.setLabelFor(linkToJsBeautify);
        org.openide.awt.Mnemonics.setLocalizedText(helpLabel, org.openide.util.NbBundle.getMessage(JSBeautifyPanel.class, "JSBeautifyPanel.helpLabel.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(linkToJsBeautify, org.openide.util.NbBundle.getMessage(JSBeautifyPanel.class, "JSBeautifyPanel.linkToJsBeautify.text")); // NOI18N

        labelWrapLineLength.setLabelFor(wrapLineLength);
        org.openide.awt.Mnemonics.setLocalizedText(labelWrapLineLength, org.openide.util.NbBundle.getMessage(JSBeautifyPanel.class, "JSBeautifyPanel.labelWrapLineLength.text")); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(usePaddingSpaces)
                            .addComponent(jslintHappy)
                            .addComponent(spaceBeforeConditional)
                            .addComponent(preserveNewLines)
                            .addComponent(useTabs, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(indentCase)
                            .addComponent(useSpaceInEmptyParen)
                            .addComponent(useSpaceBeforeAnon)
                            .addComponent(breakChainedMethods)
                            .addComponent(keepArrayIndent))
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(braceStyle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(indentSize, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(initialIndentLevel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(wrapLineLength, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(initialIndentLevelLabel)
                            .addComponent(indentSizeLabel)
                            .addComponent(braceStyleLabel)
                            .addComponent(labelWrapLineLength))
                        .addContainerGap(28, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(helpLabel)
                        .addGap(18, 18, 18)
                        .addComponent(linkToJsBeautify)
                        .addGap(86, 86, 86))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(useTabs, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(braceStyle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(braceStyleLabel))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(preserveNewLines)
                        .addGap(18, 18, 18)
                        .addComponent(spaceBeforeConditional, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, Short.MAX_VALUE)
                        .addComponent(indentCase, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(indentSize, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(indentSizeLabel))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(initialIndentLevel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(initialIndentLevelLabel))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelWrapLineLength)
                            .addComponent(wrapLineLength, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(18, 18, 18)
                .addComponent(jslintHappy, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(usePaddingSpaces, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(useSpaceInEmptyParen, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(useSpaceBeforeAnon, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(breakChainedMethods, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(keepArrayIndent, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(helpLabel)
                    .addComponent(linkToJsBeautify))
                .addGap(38, 38, 38))
        );
    }// </editor-fold>//GEN-END:initComponents

	private void useTabsActionPerformed( java.awt.event.ActionEvent evt ) {//GEN-FIRST:event_useTabsActionPerformed
            if (useTabs.isSelected()) {
                indentSize.setEnabled(false);
            } else {
                indentSize.setEnabled(true);
            }
	}//GEN-LAST:event_useTabsActionPerformed

	private void spaceBeforeConditionalActionPerformed( java.awt.event.ActionEvent evt ) {//GEN-FIRST:event_spaceBeforeConditionalActionPerformed
            // TODO add your handling code here:
	}//GEN-LAST:event_spaceBeforeConditionalActionPerformed

	private void braceStyleActionPerformed( java.awt.event.ActionEvent evt ) {//GEN-FIRST:event_braceStyleActionPerformed
            // TODO add your handling code here:
	}//GEN-LAST:event_braceStyleActionPerformed

    private void jslintHappyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jslintHappyActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jslintHappyActionPerformed

    private void usePaddingSpacesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_usePaddingSpacesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_usePaddingSpacesActionPerformed

    private void useSpaceInEmptyParenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_useSpaceInEmptyParenActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_useSpaceInEmptyParenActionPerformed

    private void useSpaceBeforeAnonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_useSpaceBeforeAnonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_useSpaceBeforeAnonActionPerformed

    private void breakChainedMethodsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_breakChainedMethodsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_breakChainedMethodsActionPerformed

    private void keepArrayIndentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_keepArrayIndentActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_keepArrayIndentActionPerformed

    void load() {

        braceStyle.setSelectedItem(JSBeautifyOptions.getInstance().getOption("braceStyle", "collapse"));
        breakChainedMethods.setSelected(JSBeautifyOptions.getInstance().getOption("breakChainedMethods", false));
        indentCase.setSelected(JSBeautifyOptions.getInstance().getOption("indentCase", false));
        indentSize.setSelectedIndex(JSBeautifyOptions.getInstance().getOption("indentSize", 1));
        initialIndentLevel.setSelectedIndex(JSBeautifyOptions.getInstance().getOption("initialIndentLevel", 0));
        jslintHappy.setSelected(JSBeautifyOptions.getInstance().getOption("jslintHappy", false));
        keepArrayIndent.setSelected(JSBeautifyOptions.getInstance().getOption("keepArrayIndent", false));
        preserveNewLines.setSelected(JSBeautifyOptions.getInstance().getOption("preserveNewLines", true));
        spaceBeforeConditional.setSelected(JSBeautifyOptions.getInstance().getOption("spaceBeforeConditional", true));
        usePaddingSpaces.setSelected(JSBeautifyOptions.getInstance().getOption("usePaddingSpaces", false));
        useSpaceBeforeAnon.setSelected(JSBeautifyOptions.getInstance().getOption("useSpaceBeforeAnon", false));
        useSpaceInEmptyParen.setSelected(JSBeautifyOptions.getInstance().getOption("useSpaceInEmptyParen", false));
        useTabs.setSelected(JSBeautifyOptions.getInstance().getOption("useTabs", false));
        wrapLineLength.setSelectedIndex(JSBeautifyOptions.getInstance().getOption("wrapLineLength", 0));

        if (useTabs.isSelected()) {
            indentSize.setEnabled(false);
        } else {
            indentSize.setEnabled(true);
        }
    }

    void store() {

        JSBeautifyOptions.getInstance().setOption("braceStyle", braceStyle.getSelectedItem().toString());
        JSBeautifyOptions.getInstance().setOption("breakChainedMethods", breakChainedMethods.isSelected());
        JSBeautifyOptions.getInstance().setOption("indentCase", indentCase.isSelected());
        JSBeautifyOptions.getInstance().setOption("indentSize", indentSize.getSelectedIndex());
        JSBeautifyOptions.getInstance().setOption("initialIndentLevel", initialIndentLevel.getSelectedIndex());
        JSBeautifyOptions.getInstance().setOption("jslintHappy", jslintHappy.isSelected());
        JSBeautifyOptions.getInstance().setOption("keepArrayIndent", keepArrayIndent.isSelected());
        JSBeautifyOptions.getInstance().setOption("preserveNewLines", preserveNewLines.isSelected());
        JSBeautifyOptions.getInstance().setOption("spaceBeforeConditional", spaceBeforeConditional.isSelected());
        JSBeautifyOptions.getInstance().setOption("usePaddingSpaces", usePaddingSpaces.isSelected());
        JSBeautifyOptions.getInstance().setOption("useSpaceBeforeAnon", useSpaceBeforeAnon.isSelected());
        JSBeautifyOptions.getInstance().setOption("useSpaceInEmptyParen", useSpaceInEmptyParen.isSelected());
        JSBeautifyOptions.getInstance().setOption("useTabs", useTabs.isSelected());
        JSBeautifyOptions.getInstance().setOption("wrapLineLength", wrapLineLength.getSelectedIndex());


    }

    boolean valid() {
        // TODO check whether form is consistent and complete
        return true;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox braceStyle;
    private javax.swing.JLabel braceStyleLabel;
    private javax.swing.JCheckBox breakChainedMethods;
    private javax.swing.JLabel helpLabel;
    private javax.swing.JCheckBox indentCase;
    private javax.swing.JComboBox indentSize;
    private javax.swing.JLabel indentSizeLabel;
    private javax.swing.JComboBox initialIndentLevel;
    private javax.swing.JLabel initialIndentLevelLabel;
    private javax.swing.JCheckBox jslintHappy;
    private javax.swing.JCheckBox keepArrayIndent;
    private javax.swing.JLabel labelWrapLineLength;
    private javax.swing.JLabel linkToJsBeautify;
    private javax.swing.JCheckBox preserveNewLines;
    private javax.swing.JCheckBox spaceBeforeConditional;
    private javax.swing.JCheckBox usePaddingSpaces;
    private javax.swing.JCheckBox useSpaceBeforeAnon;
    private javax.swing.JCheckBox useSpaceInEmptyParen;
    private javax.swing.JCheckBox useTabs;
    private javax.swing.JComboBox wrapLineLength;
    // End of variables declaration//GEN-END:variables
}
